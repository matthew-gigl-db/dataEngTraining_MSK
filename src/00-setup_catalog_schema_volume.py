# Databricks notebook source
# MAGIC %md
# MAGIC # Welcome to MSK Databricks Day Data Engineering! 
# MAGIC
# MAGIC ***
# MAGIC
# MAGIC This is our first notebook, which we'll use to setup our Catalog, Schema, and Volume to Use for the **Training**.  
# MAGIC
# MAGIC It's always a best practice to start each notebook with a Markdown cell describing the notebook's purpose, and to list the steps that will be completed.  This is helpful later for the Ops Teams that will be monitoring your notebooks as production jobs in the future, or for folks that may need to maintain your work later.  
# MAGIC
# MAGIC This is a markdown cell. With markdown you can:
# MAGIC - Create bulleted lists.
# MAGIC - [Add hyper links.](www.databricks.com)
# MAGIC
# MAGIC > add block quotes
# MAGIC
# MAGIC And images. 
# MAGIC ![MSKCC-logo](/Workspace/Users/odl_instructor_1452233@databrickslabs.com/dataEngTraining_MSK/fixtures/images/MSKCC_Logo.jpg)
# MAGIC
# MAGIC Markdown allows for a much richer experience than just comments alone.  

# COMMAND ----------

class MyClass:
    def __init__(self, name, value):
        self.name = name
        self.value = value

    def get_name(self):
        return self.name

    def get_value(self):
        return self.value

    def __repr__(self):
        return f"MyClass(name={self.name}, value={self.value})"

# COMMAND ----------

# MAGIC %md
# MAGIC ## Install or Upgrade the Databricks Python SDK
# MAGIC ***

# COMMAND ----------

# DBTITLE 1,Upgrading Databricks SDK with Pip Command
# MAGIC %pip install databricks-sdk --upgrade

# COMMAND ----------

# DBTITLE 1,Restarting Python with DBUtils Library
dbutils.library.restartPython()

# COMMAND ----------

# MAGIC %md
# MAGIC ## Set Notebook Parameters Using Databricks Utility Widgets
# MAGIC ***

# COMMAND ----------

# MAGIC %md
# MAGIC Everyone will use their own catalog for this training.  We'll first initialize a notebook parameter using a Databricks Text Widget.  
# MAGIC
# MAGIC Then everyone should please enter their own catalog name in the text box that's created at the top of the page.  Please use your first initial followed by your last name all in lower case.  

# COMMAND ----------

# DBTITLE 1,Set Parameters
dbutils.widgets.text("bundle.catalog", "", "New Catalog Based On Your First Initial and Last Name")

# COMMAND ----------

# DBTITLE 1,Retrieve Parameters
catalog_use = dbutils.widgets.get("bundle.catalog")
catalog_use

# COMMAND ----------

# MAGIC %md
# MAGIC ## Create a Catalog Using Spark SQL with pyspark
# MAGIC ***

# COMMAND ----------

# DBTITLE 1,Create Catalog Statement
create_catalog_stmnt = f"""
CREATE CATALOG IF NOT EXISTS {catalog_use}
"""

print(create_catalog_stmnt)

# COMMAND ----------

# DBTITLE 1,Spark SQL Catalog Creation
spark.sql(create_catalog_stmnt)

# COMMAND ----------

# MAGIC %md
# MAGIC ### Show Available Catalogs with a SQL Notebook Cell
# MAGIC ***

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC SHOW CATALOGS;

# COMMAND ----------

# MAGIC %md
# MAGIC ## Initialize the SDK's Workspace Client
# MAGIC ***

# COMMAND ----------

from databricks.sdk import WorkspaceClient

w = WorkspaceClient()

# COMMAND ----------

# MAGIC %md
# MAGIC ## Update a Catalog's Details with the Workspace Client
# MAGIC ***

# COMMAND ----------

display_name = w.current_user.me().display_name
display_name

# COMMAND ----------

w.catalogs.update(
    catalog_use
    ,comment=f"This catalog was created by {display_name} for MSK Databricks Training Day!"
)

# COMMAND ----------

# MAGIC %md
# MAGIC ## Describe the Catalog
# MAGIC ***

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC DESCRIBE CATALOG ${catalog};

# COMMAND ----------

# MAGIC %md
# MAGIC ## Set the Catalog to Use 
# MAGIC ***

# COMMAND ----------

spark.sql(f"use catalog {catalog_use}")

# COMMAND ----------

# MAGIC %sql 
# MAGIC
# MAGIC select current_catalog();

# COMMAND ----------

# MAGIC %md
# MAGIC ## Create the synthea Schema
# MAGIC ***
# MAGIC
# MAGIC Synthea is an open source package that creates Synthetic patient records we'll be using a set of files generated by this package.  More info here:
# MAGIC
# MAGIC [https://github.com/synthetichealth/synthea](https://github.com/synthetichealth/synthea)

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC create schema if not exists synthea; 

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC show schemas;

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC comment on schema synthea is 'Data and assets related to the Synthea Data Generator';

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC describe schema synthea;

# COMMAND ----------

# MAGIC %md
# MAGIC ## Create a Landing Volume for the Synthea Files
# MAGIC ***

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC use schema synthea;
# MAGIC create volume if not exists landing;

# COMMAND ----------

# MAGIC %sql
# MAGIC
# MAGIC comment on volume landing is 'Location for synthea raw files to be ingested into the Lakehouse';

# COMMAND ----------

# MAGIC %sql 
# MAGIC
# MAGIC describe volume landing;
